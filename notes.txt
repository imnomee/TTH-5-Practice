AJAX: Asynch Javascript and XML
XML: Extensible Markup Language
JSON: Javascript Object Notation

AJAX lets you update html without loading a new page.

How AJAX Works:
1. Create and XMLHTTP Request object.
2. Create a callback function.
3. Open a request.
4. Send the request

for each AJAX request, we should create a new object
=======================
let xhr = new XMLHttpRequest(); //1. create request
            xhr.onreadystatechange = function () {
                  if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        document.getElementById('ajax').innerHTML =
                            xhr.responseText;
                    } else {
                        alert(xhr.statusText);
                    }
                }
                // if (xhr.readyState === 4) {
                //     if (xhr.status === 200) {
                //         document.getElementById('ajax').innerHTML =
                //             xhr.responseText;
                //     } else if (xhr.status === 404) {
                //         //file not found
                //     } else if (xhr.status === 500) {
                //         //server issue
                //     }
                // }
            };
            xhr.open('GET', 'sidebar.html'); // 3. ready to request but not sent yet.
            xhr.send(); //4. send request

======================
Different States of the Requests:
0: request not initialized
1: server connection established
2: request received
3: processing request
4: request finished and response is ready

=======================
HTTP status codes:
200: 'OK'
304: 'Not Modified'
403: 'Forbidden'
404: 'Not Found'

======================
Functions:
onload
onprogress
onreadystatechange
onerror

======================
The GET method is a simple way to send data to a web server.
downside:
all of data is sent in the url
like: Social Sec, Password, DOB
This is the most secure system.
----------------------
Thats why HTTP offers the POST method
Post sends data in the body of request and not in the URL
================

web servers usually reply to the AJAX requests in text format

Limitations:
AJAX works on the same server.
it cannot request data from the other server.
it won't allow from http to https
switching from one port 80 to another port 8888
www.myserver.com cant get data from db.myserver.com
=================
Another common way to access other info is JSONP
JSONP: JSON with Padding

================
Difference Between callbacks and promises
Promise represents a value that can be handled at some point later.

Promise is always going to be in one of three states:
1. Pending - the default waiting state of a promise 
2. Fulfilled - The operation completed successfully
3. Rejected - The operation failed.

Working with promises is a three steps sequence.
1. Create a promise using the Promise() Constructor
2. Define what should happend when the promise is fulfilled or Rejected
3. Use the value of fulfilled promise or provide a rejection reason for rejected promise. 

After the value is availble to consume:
then()
catch()